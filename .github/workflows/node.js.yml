name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [20.x ,22.x]

    steps:
      - uses: actions/checkout@v4
      
      # Backend setup
      - name: Setup Node.js for backend
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          npm install
          npm audit fix --force || true  # Continue even if audit fix fails
          
      # Frontend setup
      - name: Setup Node.js for frontend
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install & Build frontend
        working-directory: ./frontend
        run: |
          npm install
          npm audit fix --force || true
          npm run build --if-present
      
      # Environment setup (unchanged)
      - name: Setup environment variables
        run: |
          touch .env
          echo "${{ secrets.ENV }}" > .env

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
